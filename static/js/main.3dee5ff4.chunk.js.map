{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","console","log","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","theTech","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","Tech","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dee5ff4.chunk.js","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n} from './types.js';\n\n//Get logs from server\nexport const getLogs = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Add new log\nexport const addLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Search server\nexport const searchLogs = (text) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Update log on server\nexport const updateLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await res.json();\n\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Delete log from server\nexport const deleteLog = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Set current log\nexport const setCurrent = (log) => {\n  return {\n    type: SET_CURRENT,\n    payload: log,\n  };\n};\n\n//Clear current log\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT,\n  };\n};\n\n//Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { searchLogs } from '../../actions/logActions';\n\nconst SearchBar = ({ searchLogs }) => {\n  const text = useRef('');\n\n  const onChange = (e) => {\n    searchLogs(text.current.value);\n  };\n\n  return (\n    <nav style={{ marginBottom: '30px' }} className='blue'>\n      <div className='nav-wrapper'>\n        <form>\n          <div className='input-field'>\n            <input\n              id='search'\n              type='search'\n              placeholder='Search Logs...'\n              ref={text}\n              onChange={onChange}\n            />\n            <label className='label-icon' htmlFor='search'>\n              <i className='material-icons'>search</i>\n            </label>\n            <i className='material-icons'>close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nSearchBar.propTypes = {\n  searchLogs: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { searchLogs })(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteLog, setCurrent } from '../../actions/logActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log.id);\n    M.toast({ html: `Log #${log.id} Deleted` });\n  };\n  return (\n    <li className='collection-item'>\n      <div>\n        <a\n          href='#edit-log-modal'\n          className={`modal-trigger ${\n            log.attention ? 'red-text' : 'blue-text'\n          }`}\n          onClick={() => setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className='grey-text'>\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\n          <span className='black-text'>{log.tech}</span> on{' '}\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\n        </span>\n        <a href='#!' onClick={onDelete} className='secondary-content'>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\n","import React from 'react';\n\nconst Preloader = () => {\n  return (\n    <div className='progress blue lighten-4'>\n      <div className='indeterminate blue' />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport PropTypes from 'prop-types';\nimport Preloader from '../layout/Preloader';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    //eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className='center'>No logs to show...</p>\n      ) : (\n        logs.map((log) => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  log: state.log,\n});\n\nexport default connect(mapStateToProps, { getLogs })(Logs);\n","import React from 'react';\n\nconst AddBtn = () => {\n  return (\n    <div className='fixed-action-btn'>\n      <a\n        href='#add-log-modal'\n        className='btn-floating btn-large blue darken-2 modal-trigger'\n      >\n        <i className='large material-icons'>add</i>\n      </a>\n      <ul>\n        <li>\n          <a\n            href='#tech-list-modal'\n            className='btn-floating green modal-trigger'\n          >\n            <i className='material-icons'>person</i>\n          </a>\n        </li>\n        <li>\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\n            <i className='material-icons'>person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n} from './types';\n\n//Get techs from server\nexport const getTechs = () => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Add new tech to server\nexport const addTech = (tech) => async (dispatch) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_TECH,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Delete Tech\nexport const deleteTech = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await fetch(`/techs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText,\n    });\n  }\n};\n\n//Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map((theTech) => (\n      <option\n        key={theTech.id}\n        value={`${theTech.firstName} ${theTech.lastName}`}\n      >\n        {theTech.firstName} {theTech.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  techs: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n","import React, { useState } from 'react';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addLog } from '../../actions/logActions.js';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and Tech' });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      addLog(newLog);\n      M.toast({ html: `Log added by ${tech}` });\n      //Clear Fields\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='add-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <label htmlFor='message' className='active'>\n              Log Message\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired,\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%',\n};\n\nexport default connect(null, { addLog })(AddLogModal);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateLog } from '../../actions/logActions';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.Tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({ html: 'Please enter a message and Tech' });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      updateLog(updLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      //Clear Fields\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%',\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object.isRequired,\n  updateLog: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  current: state.log.current,\n});\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTech } from '../../actions/techActions.js';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const onSubmit = () => {\n    if (firstName === '' || lastName === '') {\n      M.toast({ html: 'Please enter the first and last name' });\n    } else {\n      addTech({\n        firstName,\n        lastName,\n      });\n\n      M.toast({ html: `${firstName} ${lastName} was added as a Tech` });\n\n      //Clear Fields\n      setFirstName('');\n      setLastName('');\n    }\n  };\n\n  return (\n    <div id='add-tech-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>New Technician</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='firstName'\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <label htmlFor='firstName' className='active'>\n              First Name\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='lastName'\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <label htmlFor='lastName' className='active'>\n              Last Name\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-light btn'\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addTech })(AddTechModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteTech } from '../../actions/techActions.js';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\n  const onDelete = () => {\n    deleteTech(id);\n    M.toast({ html: `Technician: ${firstName} ${lastName} deleted` });\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        {firstName} {lastName}\n        <a href='#!' className='secondary-content' onClick={onDelete}>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.object.isRequired,\n};\n\nexport default connect(null, { deleteTech })(TechItem);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getTechs } from '../../actions/techActions';\nimport TechItem from './TechItem';\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id='tech-list-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>Technician List</h4>\n        <ul className='collection'>\n          {!loading &&\n            techs !== null &&\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  techs: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n} from '../actions/types';\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter((log) => log.id !== action.payload),\n        loading: false,\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map((log) =>\n          log.id === action.payload.id ? action.payload : log\n        ),\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n} from '../actions/types.js';\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false,\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false,\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport logReducer from './logReducer.js';\nimport techReducer from './techReducer.js';\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport SearchBar from './components/layout/SearchBar.js';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn.js';\nimport AddLogModal from './components/logs/AddLogModal.js';\nimport EditLogModal from './components/logs/EditLogModal.js';\nimport AddTechModal from './components/techs/AddTechModal.js';\nimport TechListModal from './components/techs/TechListModal.js';\nimport { Provider } from 'react-redux';\nimport store from './store.js';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    //Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}